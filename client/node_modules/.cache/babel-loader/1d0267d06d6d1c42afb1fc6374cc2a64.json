{"ast":null,"code":"var _jsxFileName = \"D:\\\\Udemy\\\\ReactApp\\\\client\\\\src\\\\components\\\\Layout\\\\Navbar.js\";\nimport React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { logout } from '../../actions/auth';\n\nconst NavBar = ({\n  auth: {\n    isAuthenicated,\n    loading\n  },\n  logout\n}) => {\n  const authLinks = React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/profiles\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"Developers\")), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/dashboard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-user\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), '   ', React.createElement(\"span\", {\n    className: \"hide-sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Dashboard\"))), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    onClick: logout,\n    href: \"#!\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-sign-out-alt\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), '   ', React.createElement(\"span\", {\n    className: \"hide-sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Logout\"))));\n  const guessLinks = React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/profiles\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Developers\")), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/register\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Register\")), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Login\")));\n  return React.createElement(\"nav\", {\n    className: \"navbar bg-dark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"test\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"LOGO\"), \"Telekom DevConnector\")), !loading && React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, isAuthenicated ? authLinks : guessLinks));\n};\n\nNavBar.propTypes = {\n  logout: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  logout\n})(NavBar);","map":{"version":3,"sources":["D:/Udemy/ReactApp/client/src/components/Layout/Navbar.js"],"names":["React","Fragment","Link","connect","PropTypes","logout","NavBar","auth","isAuthenicated","loading","authLinks","guessLinks","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,QAAsB,oBAAtB;;AAGA,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA,IAAI,EAAE;AAACC,IAAAA,cAAD;AAAiBC,IAAAA;AAAjB,GAAP;AAAmCJ,EAAAA;AAAnC,CAAD,KAAgD;AAE7D,QAAMK,SAAS,GACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACJ,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADI,CADN,EAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,YAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAG,IAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EACgC,KADhC,EAEA;AAAM,IAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFA,CADF,CANA,EAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,OAAO,EAAEL,MAAZ;AAAoB,IAAA,IAAI,EAAC,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,qBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAC0C,KAD1C,EAEE;AAAM,IAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,CADF,CAZA,CADF;AAwBA,QAAMM,UAAU,GACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACJ,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADI,CADN,EAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CANA,EASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CATA,CADF;AAgBE,SACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,yBADF,CADF,EAMD,CAACF,OAAD,IAAY,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAWD,cAAc,GAAGE,SAAH,GAAcC,UAAvC,CANX,CADF;AAUH,CApDD;;AAsDAL,MAAM,CAACM,SAAP,GAAmB;AACjBP,EAAAA,MAAM,EAAED,SAAS,CAACS,IAAV,CAAeC,UADN;AAEjBP,EAAAA,IAAI,EAACH,SAAS,CAACW,MAAV,CAAiBD;AAFL,CAAnB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAClCV,EAAAA,IAAI,EAACU,KAAK,CAACV;AADuB,CAAL,CAA7B;;AAIA,eAAeJ,OAAO,CAACa,eAAD,EAAkB;AAACX,EAAAA;AAAD,CAAlB,CAAP,CAAmCC,MAAnC,CAAf","sourcesContent":["import React, { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport  {logout} from '../../actions/auth';\r\n\r\n\r\nconst NavBar = ({auth: {isAuthenicated, loading} , logout}) => {\r\n\r\n  const authLinks = (\r\n    <ul>\r\n          <li>\r\n      <Link to=\"/profiles\">\r\n          Developers\r\n      </Link>\r\n    </li>\r\n    <li>\r\n      <Link to=\"/dashboard\">\r\n      <i className=\"fas fa-user\"></i>{'   '}\r\n      <span className=\"hide-sm\">Dashboard</span>\r\n      </Link>\r\n    </li>\r\n    <li>\r\n      <a onClick={logout} href=\"#!\">\r\n        <i className=\"fas fa-sign-out-alt\"></i>{'   '}\r\n        <span className=\"hide-sm\">Logout</span></a>\r\n    </li>\r\n\r\n  </ul>\r\n  );\r\n\r\n\r\n\r\n  const guessLinks = (\r\n    <ul>\r\n          <li>\r\n      <Link to=\"/profiles\">\r\n          Developers\r\n      </Link>\r\n    </li>\r\n    <li>\r\n      <Link to=\"/register\">Register</Link>\r\n    </li>\r\n    <li>\r\n      <Link to=\"/login\">Login</Link>\r\n    </li>\r\n  </ul>\r\n    );\r\n\r\n    return (\r\n      <nav className=\"navbar bg-dark\">\r\n        <h1>\r\n          <Link to=\"/\">\r\n            <span className=\"test\">LOGO</span>Telekom DevConnector\r\n          </Link>\r\n        </h1>\r\n    {!loading && <Fragment>{isAuthenicated ? authLinks: guessLinks}</Fragment> }\r\n      </nav>\r\n    );\r\n}\r\n\r\nNavBar.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n  auth:PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\nauth:state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps, {logout})(NavBar)\r\n"]},"metadata":{},"sourceType":"module"}