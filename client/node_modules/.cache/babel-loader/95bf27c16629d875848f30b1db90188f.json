{"ast":null,"code":"import axios from 'axios';\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGIN_OUT } from './types';\nimport setAuthToken from '../utils/setAuthToken';\nimport { setAlert } from './alert'; //LOAD USER\n\nexport const loaduser = () => async dispatch => {\n  if (localStorage.token) {\n    console.log(\"load user: \" + localStorage.token);\n    setAuthToken(localStorage.token);\n  }\n\n  try {\n    const res = await axios.get('/api/auth');\n    console.log(JSON.stringify(\"DATA FROM /api/auth: \" + JSON.stringify(res.data)));\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data\n    });\n  } catch (error) {\n    console.log(\"loadUser ERROR: \" + error); // const errors =error.response.data.errors;\n    // if(errors){\n    //     console.log(\"LOAD_USER_ERROR \" + errors);\n    //     errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    // }\n\n    dispatch({\n      type: AUTH_ERROR\n    });\n  }\n}; //REGISTER USRE\n\nexport const register = ({\n  name,\n  email,\n  password\n}) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    name,\n    email,\n    password\n  });\n\n  try {\n    const res = await axios.post('/api/users', body, config);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loaduser());\n  } catch (err) {\n    console.log(\"REGISTER_ERROR: \" + err);\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      console.log(\"REGISTER_ERROR \" + err);\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n}; //LOGIN USEER\n\nexport const login = (email, password) => async dispatch => {\n  console.log('email' + email);\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    email,\n    password\n  });\n  console.log(\"DATA TO SEND TO auth/login \" + body);\n\n  try {\n    const res = await axios.post('/api/auth', body, config);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loaduser());\n  } catch (err) {\n    //SHOULD FIX\n    dispatch(setAlert(\"Invalid Credential\", 'danger'));\n    console.log(\"ERROR LOGIN \" + err); // const errors = err.response.data.errors;\n    // if(errors){\n    //     console.log(\"LOGIN err \" + err);\n    //     errors.forEach(error => dispatch(setAlert(\"ГРЕШКА\", 'danger')));\n    // }\n\n    dispatch({\n      type: LOGIN_FAIL\n    });\n  }\n};","map":{"version":3,"sources":["D:/Udemy/ReactApp/client/src/actions/auth.js"],"names":["axios","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGIN_OUT","setAuthToken","setAlert","loaduser","dispatch","localStorage","token","console","log","res","get","JSON","stringify","data","type","payload","error","register","name","email","password","config","headers","body","post","err","errors","response","forEach","msg","login"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    USER_LOADED,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGIN_OUT\r\n} from './types';\r\n\r\nimport setAuthToken from '../utils/setAuthToken';\r\n\r\nimport { setAlert }from './alert';\r\n\r\n\r\n//LOAD USER\r\nexport const loaduser = () => async dispatch => {\r\n    if(localStorage.token){\r\n        console.log(\"load user: \" + localStorage.token);\r\n        setAuthToken(localStorage.token);\r\n    }\r\n\r\n    try {\r\n        const res = await axios.get('/api/auth');\r\n\r\n        console.log(JSON.stringify(\"DATA FROM /api/auth: \" + JSON.stringify(res.data)));\r\n        \r\n        dispatch({\r\n            type:USER_LOADED,\r\n            payload:res.data\r\n        });\r\n\r\n    } catch (error) {\r\n\r\n        console.log(\"loadUser ERROR: \" + error);\r\n\r\n        // const errors =error.response.data.errors;\r\n\r\n        // if(errors){\r\n        //     console.log(\"LOAD_USER_ERROR \" + errors);\r\n        //     errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n        // }\r\n\r\n        dispatch({\r\n            type:AUTH_ERROR\r\n        });\r\n    }\r\n};\r\n\r\n//REGISTER USRE\r\nexport const register = ({name, email, password}) => async dispatch => {\r\n    const config = {\r\n        headers:{\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    const body = JSON.stringify({name, email,password});\r\n\r\n    try {\r\n        const res = await axios.post('/api/users', body, config);\r\n\r\n        dispatch({\r\n            type: REGISTER_SUCCESS,\r\n            payload: res.data\r\n        })\r\n\r\n        dispatch(loaduser());\r\n\r\n    } catch (err) {\r\n\r\n\r\n        console.log(\"REGISTER_ERROR: \" + err);\r\n\r\n        const errors =err.response.data.errors;\r\n\r\n        if(errors){\r\n            console.log(\"REGISTER_ERROR \" + err);\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n        }\r\n\r\n        dispatch({\r\n            \r\n            type: REGISTER_FAIL\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n//LOGIN USEER\r\nexport const login = (email, password) => async dispatch => {\r\n\r\n\r\n    console.log('email' + email);\r\n    const config = {\r\n        headers:{\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    const body = JSON.stringify({email,password});\r\n\r\n\r\n    console.log(\"DATA TO SEND TO auth/login \" + body);\r\n\r\n    try {\r\n        const res = await axios.post('/api/auth', body, config);\r\n\r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: res.data\r\n        })\r\n\r\n        dispatch(loaduser());\r\n\r\n    } catch (err) {\r\n\r\n\r\n        //SHOULD FIX\r\n        dispatch(setAlert(\"Invalid Credential\", 'danger'));\r\n        console.log(\"ERROR LOGIN \" + err);\r\n\r\n        // const errors = err.response.data.errors;\r\n\r\n        // if(errors){\r\n        //     console.log(\"LOGIN err \" + err);\r\n        //     errors.forEach(error => dispatch(setAlert(\"ГРЕШКА\", 'danger')));\r\n        // }\r\n\r\n        dispatch({       \r\n            type: LOGIN_FAIL\r\n        })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}