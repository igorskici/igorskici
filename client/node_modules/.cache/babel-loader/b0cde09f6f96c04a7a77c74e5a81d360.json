{"ast":null,"code":"var _jsxFileName = \"D:\\\\Udemy\\\\ReactApp\\\\client\\\\src\\\\components\\\\dashboard\\\\Dashboard.js\";\nimport React, { useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getCurrentProfile } from '../../actions/profile';\nimport Spinner from '../Layout/Spinner';\n\nconst Dashboard = ({\n  getCurrentProfile,\n  auth,\n  profile: {\n    profile,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    getCurrentProfile();\n  }, []);\n  return loading && profile == null ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }));\n};\n\nDashboard.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  getCurrentProfile\n})(Dashboard);","map":{"version":3,"sources":["D:/Udemy/ReactApp/client/src/components/dashboard/Dashboard.js"],"names":["React","useEffect","Fragment","PropTypes","connect","getCurrentProfile","Spinner","Dashboard","auth","profile","loading","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAyBC,QAAzB,QAAwC,OAAxC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,iBAAT,QAAkC,uBAAlC;AACA,OAAOC,OAAP,MAAoB,mBAApB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAACF,EAAAA,iBAAD;AAAoBG,EAAAA,IAApB;AAA0BC,EAAAA,OAAO,EAAE;AAACA,IAAAA,OAAD;AAAUC,IAAAA;AAAV;AAAnC,CAAD,KAA4D;AAE1ET,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,iBAAiB;AACpB,GAFQ,EAEP,EAFO,CAAT;AAKA,SAAOK,OAAO,IAAID,OAAO,IAAI,IAAtB,GAA6B,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA7B,GAA2C,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAC9C,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD8C,CAAlD;AAGH,CAVD;;AAYAF,SAAS,CAACI,SAAV,GAAsB;AAClBN,EAAAA,iBAAiB,EAACF,SAAS,CAACS,IAAV,CAAeC,UADf;AAElBL,EAAAA,IAAI,EAAEL,SAAS,CAACW,MAAV,CAAiBD,UAFL;AAGlBJ,EAAAA,OAAO,EAAEN,SAAS,CAACW,MAAV,CAAiBD;AAHR,CAAtB;;AAMA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAC9BR,EAAAA,IAAI,EAACQ,KAAK,CAACR,IADmB;AAE9BC,EAAAA,OAAO,EAACO,KAAK,CAACP;AAFgB,CAAL,CAA7B;;AAKA,eAAeL,OAAO,CAACW,eAAD,EAAkB;AAACV,EAAAA;AAAD,CAAlB,CAAP,CAA8CE,SAA9C,CAAf","sourcesContent":["import React,{useEffect, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport { getCurrentProfile } from '../../actions/profile'; \r\nimport Spinner from '../Layout/Spinner';\r\n\r\nconst Dashboard = ({getCurrentProfile, auth, profile: {profile, loading}}) => {\r\n\r\n    useEffect(() => {\r\n        getCurrentProfile();\r\n    },[])\r\n\r\n\r\n    return loading && profile == null ? <Spinner /> : <Fragment>\r\n        <Spinner />\r\n    </Fragment>;\r\n};\r\n\r\nDashboard.propTypes = {\r\n    getCurrentProfile:PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    profile: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth:state.auth,\r\n    profile:state.profile\r\n})\r\n\r\nexport default connect(mapStateToProps, {getCurrentProfile})(Dashboard)\r\n"]},"metadata":{},"sourceType":"module"}