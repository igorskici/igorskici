{"ast":null,"code":"var _jsxFileName = \"D:\\\\Udemy\\\\ReactApp\\\\client\\\\src\\\\components\\\\profiles\\\\Profiles.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../Layout/Spinner';\nimport { getProfiles } from '../../actions/profile';\nimport Profileitem from './Profileitem';\n\nconst Profiles = ({\n  getProfiles,\n  profile: {\n    profiles,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    getProfiles();\n  }, [getProfiles]);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, loading ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"large text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Developers\"), React.createElement(\"p\", {\n    className: \"lead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fab fa-connectdevelop\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), \" Browse and connect with Developers\"), React.createElement(\"div\", {\n    className: \"profiles\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, profiles.length > 0 ? profiles.map(profile => React.createElement(Profileitem, {\n    key: profile.id,\n    profile: profile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  })) : React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"No profiles found\"))));\n};\n\nProfiles.propTypes = {\n  getProfiles: PropTypes.func.isRequired,\n  prfile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  getProfiles\n})(Profiles);","map":{"version":3,"sources":["D:/Udemy/ReactApp/client/src/components/profiles/Profiles.js"],"names":["React","Fragment","useEffect","PropTypes","connect","Spinner","getProfiles","Profileitem","Profiles","profile","profiles","loading","length","map","id","propTypes","func","isRequired","prfile","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAAQC,WAAR,QAA0B,uBAA1B;AAEA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAACF,EAAAA,WAAD;AAAcG,EAAAA,OAAO,EAAC;AAACC,IAAAA,QAAD;AAAWC,IAAAA;AAAX;AAAtB,CAAD,KAAgD;AAE7DT,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,WAAW;AACd,GAFQ,EAEP,CAACA,WAAD,CAFO,CAAT;AAIA,SAAO,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACFK,OAAO,GAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAiB,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACjB;AAAI,IAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADiB,EAEjB;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,SAAS,EAAC,uBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,wCAFiB,EAKjB;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,QAAQ,CAACE,MAAT,GAAkB,CAAlB,GACGF,QAAQ,CAACG,GAAT,CAAaJ,OAAO,IAChB,oBAAC,WAAD;AAAa,IAAA,GAAG,EAAEA,OAAO,CAACK,EAA1B;AAA8B,IAAA,OAAO,EAAEL,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADH,GAIG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBALR,CALiB,CADtB,CAAP;AAeH,CArBD;;AAuBAD,QAAQ,CAACO,SAAT,GAAqB;AACjBT,EAAAA,WAAW,EAACH,SAAS,CAACa,IAAV,CAAeC,UADV;AAEjBC,EAAAA,MAAM,EAACf,SAAS,CAACgB,MAAV,CAAiBF;AAFP,CAArB;;AAIA,MAAMG,eAAe,GAAGC,KAAK,KAAK;AAC9BZ,EAAAA,OAAO,EAACY,KAAK,CAACZ;AADgB,CAAL,CAA7B;;AAIA,eAAeL,OAAO,CAACgB,eAAD,EAAkB;AAACd,EAAAA;AAAD,CAAlB,CAAP,CAAwCE,QAAxC,CAAf","sourcesContent":["import React,{Fragment, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux'; \r\nimport Spinner from '../Layout/Spinner';\r\nimport {getProfiles} from '../../actions/profile'; \r\n\r\nimport Profileitem from './Profileitem';\r\n\r\nconst Profiles = ({getProfiles, profile:{profiles, loading}}) => {\r\n\r\n    useEffect(() => {\r\n        getProfiles();\r\n    },[getProfiles]);\r\n\r\n    return <Fragment>\r\n        {loading ? <Spinner /> : <Fragment>\r\n                <h1 className=\"large text-primary\">Developers</h1>\r\n                <p className=\"lead\">\r\n                    <i className=\"fab fa-connectdevelop\"></i> Browse and connect with Developers\r\n                </p>\r\n                <div className=\"profiles\">\r\n                    {profiles.length > 0 ? (\r\n                        profiles.map(profile => (\r\n                            <Profileitem key={profile.id} profile={profile}/>\r\n                        ))\r\n                    ) : <h4>No profiles found</h4>}\r\n                </div>\r\n        </Fragment> }\r\n    </Fragment>\r\n}\r\n\r\nProfiles.propTypes = {\r\n    getProfiles:PropTypes.func.isRequired,\r\n    prfile:PropTypes.object.isRequired\r\n}\r\nconst mapStateToProps = state => ({\r\n    profile:state.profile\r\n})\r\n\r\nexport default connect(mapStateToProps, {getProfiles})(Profiles)\r\n"]},"metadata":{},"sourceType":"module"}