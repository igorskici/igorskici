{"ast":null,"code":"var _jsxFileName = \"D:\\\\Udemy\\\\ReactApp\\\\client\\\\src\\\\components\\\\dashboard\\\\Dashboard.js\";\nimport React, { useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getCurrentProfile, deleteAccount } from '../../actions/profile';\nimport Spinner from '../Layout/Spinner';\nimport { Link } from 'react-router-dom';\nimport DashboardActions from './DashboardActions';\nimport Expreriance from './Experiance';\nimport Education from './Education';\n\nconst Dashboard = ({\n  getCurrentProfile,\n  deleteAccount,\n  auth: {\n    user\n  },\n  profile: {\n    profile,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    getCurrentProfile();\n  }, [getCurrentProfile]);\n  return loading && profile == null ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"large text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Dashboard\"), React.createElement(\"p\", {\n    className: \"lead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-user\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), \" Welcome \", user && user.name), profile !== null ? React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(DashboardActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(Expreriance, {\n    expreriance: profile.expiriance,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(Education, {\n    education: profile.education,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"my-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn btn-danger\",\n    onClick: () => deleteAccount(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-user-minus\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), \" Delete account\"))) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"You have not yet setup a profile, please add some info\"), React.createElement(Link, {\n    to: \"/create-profile\",\n    className: \"btn btn-primary my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Create Profile\")));\n};\n\nDashboard.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired,\n  deleteAccount: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  getCurrentProfile,\n  deleteAccount\n})(Dashboard);","map":{"version":3,"sources":["D:/Udemy/ReactApp/client/src/components/dashboard/Dashboard.js"],"names":["React","useEffect","Fragment","PropTypes","connect","getCurrentProfile","deleteAccount","Spinner","Link","DashboardActions","Expreriance","Education","Dashboard","auth","user","profile","loading","name","expiriance","education","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React,{useEffect, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport { getCurrentProfile, deleteAccount } from '../../actions/profile'; \r\nimport Spinner from '../Layout/Spinner';\r\nimport { Link } from 'react-router-dom';\r\nimport DashboardActions from './DashboardActions';\r\nimport Expreriance from './Experiance';\r\nimport Education from './Education';\r\n\r\n\r\nconst Dashboard = ({\r\n  getCurrentProfile,\r\n  deleteAccount,\r\n  auth: { user },\r\n  profile: { profile, loading }\r\n}) => {\r\n  useEffect(() => {\r\n    getCurrentProfile();\r\n  }, [getCurrentProfile]);\r\n\r\n  return loading && profile == null ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Fragment>\r\n      <h1 className=\"large text-primary\">Dashboard</h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-user\"></i> Welcome {user && user.name}\r\n      </p>\r\n      {profile !== null ? \r\n      <Fragment>\r\n          <DashboardActions />\r\n           <Expreriance expreriance={profile.expiriance} />\r\n           <Education education={profile.education} />\r\n\r\n           <div className='my-2'>\r\n             <button className=\"btn btn-danger\" onClick={()=> deleteAccount()}>\r\n                <i className='fas fa-user-minus'></i> Delete account\r\n             </button>\r\n\r\n           </div>\r\n      </Fragment> : \r\n      <Fragment>\r\n          <p>You have not yet setup a profile, please add some info</p>\r\n          <Link to='/create-profile' className=\"btn btn-primary my-1\">\r\n            Create Profile\r\n        </Link>\r\n          </Fragment>}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nDashboard.propTypes = {\r\n    getCurrentProfile:PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n    deleteAccount: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth:state.auth,\r\n    profile:state.profile\r\n})\r\n\r\nexport default connect(mapStateToProps, {getCurrentProfile,deleteAccount})(Dashboard)\r\n"]},"metadata":{},"sourceType":"module"}