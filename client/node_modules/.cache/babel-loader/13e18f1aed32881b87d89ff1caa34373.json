{"ast":null,"code":"import _defineProperty from\"D:\\\\Udemy\\\\ReactApp\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"D:\\\\Udemy\\\\ReactApp\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"D:\\\\Udemy\\\\ReactApp\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{Fragment,useState}from\"react\";import{Link,withRouter}from\"react-router-dom\";import{connect}from\"react-redux\";import{addExperiences}from\"../../actions/profile\";var AddExperience=function AddExperience(_ref){var addExperiences=_ref.addExperiences,history=_ref.history;var _useState=useState({company:\"\",title:\"\",location:\"\",from:\"\",to:\"\",current:false,description:\"\"}),_useState2=_slicedToArray(_useState,2),formData=_useState2[0],setFormData=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),toDateDisable=_useState4[0],toogleDisabled=_useState4[1];var company=formData.company,title=formData.title,location=formData.location,from=formData.from,to=formData.to,current=formData.current,description=formData.description;var _onChange=function onChange(e){return setFormData(_objectSpread({},formData,_defineProperty({},e.target.name,e.target.value)));};return React.createElement(Fragment,null,React.createElement(\"h1\",{className:\"large text-primary\"},\"Add An Experience\"),React.createElement(\"p\",{className:\"lead\"},React.createElement(\"i\",{className:\"fas fa-code-branch\"}),\" Add any developer/programming positions that you have had in the past\"),React.createElement(\"small\",null,\"* = required field\"),React.createElement(\"form\",{className:\"form\",onSubmit:function onSubmit(e){e.preventDefault();addExperiences(formData,history);}},React.createElement(\"div\",{className:\"form-group\"},React.createElement(\"input\",{type:\"text\",placeholder:\"* Job Title\",value:title,onChange:function onChange(e){return _onChange(e);},name:\"title\",required:true})),React.createElement(\"div\",{className:\"form-group\"},React.createElement(\"input\",{type:\"text\",placeholder:\"* Company\",value:company,onChange:function onChange(e){return _onChange(e);},name:\"company\",required:true})),React.createElement(\"div\",{className:\"form-group\"},React.createElement(\"input\",{type:\"text\",placeholder:\"Location\",value:location,onChange:function onChange(e){return _onChange(e);},name:\"location\"})),React.createElement(\"div\",{className:\"form-group\"},React.createElement(\"h4\",null,\"From Date\"),React.createElement(\"input\",{type:\"date\",value:from,onChange:function onChange(e){return _onChange(e);},name:\"from\"})),React.createElement(\"div\",{className:\"form-group\"},React.createElement(\"p\",null,React.createElement(\"input\",_defineProperty({type:\"checkbox\",name:\"current\",checked:current,value:current,onChange:function onChange(e){setFormData(_objectSpread({},formData,{current:!current}));toogleDisabled(!toDateDisable);}},\"value\",\"\")),\" \",\"Current Job\")),React.createElement(\"div\",{className:\"form-group\"},React.createElement(\"h4\",null,\"To Date\"),React.createElement(\"input\",{type:\"date\",value:to,onChange:function onChange(e){return _onChange(e);},name:\"to\",disabled:toDateDisable?'disabled':''})),React.createElement(\"div\",{className:\"form-group\"},React.createElement(\"textarea\",{name:\"description\",cols:\"30\",rows:\"5\",placeholder:\"Job Description\",value:description,onChange:function onChange(e){return _onChange(e);}})),React.createElement(\"input\",{type:\"submit\",className:\"btn btn-primary my-1\"}),React.createElement(Link,{className:\"btn btn-light my-1\",to:\"/dashboard\"},\"Go Back\")));};export default connect(null,{addExperiences:addExperiences})(withRouter(AddExperience));","map":{"version":3,"sources":["D:/Udemy/ReactApp/client/src/components/profile-form/AddExperience.js"],"names":["React","Fragment","useState","Link","withRouter","connect","addExperiences","AddExperience","history","company","title","location","from","to","current","description","formData","setFormData","toDateDisable","toogleDisabled","onChange","e","target","name","value","preventDefault"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport {addExperiences} from \"../../actions/profile\";\r\n\r\nconst AddExperience = ({addExperiences,history}) => {\r\n  const [formData, setFormData] = useState({\r\n    company: \"\",\r\n    title: \"\",\r\n    location: \"\",\r\n    from: \"\",\r\n    to: \"\",\r\n    current: false,\r\n    description: \"\"\r\n  });\r\n\r\n  const [toDateDisable, toogleDisabled] = useState(false);\r\n\r\n  const { company, title, location, from, to, current, description } = formData;\r\n\r\n  const onChange = e =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className=\"large text-primary\">Add An Experience</h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-code-branch\"></i> Add any developer/programming\r\n        positions that you have had in the past\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form className=\"form\" onSubmit={e =>{\r\n          e.preventDefault();\r\n          addExperiences(formData, history);\r\n      }}>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"* Job Title\"\r\n            value={title}\r\n            onChange={e => onChange(e)}\r\n            name=\"title\"\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"* Company\"\r\n            value={company}\r\n            onChange={e => onChange(e)}\r\n            name=\"company\"\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Location\"\r\n            value={location}\r\n            onChange={e => onChange(e)}\r\n            name=\"location\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <h4>From Date</h4>\r\n          <input\r\n            type=\"date\"\r\n            value={from}\r\n            onChange={e => onChange(e)}\r\n            name=\"from\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <p>\r\n            <input\r\n              type=\"checkbox\"\r\n              name=\"current\"\r\n              checked={current}\r\n              value={current}\r\n              onChange={e => {\r\n                setFormData({ ...formData, current: !current });\r\n                toogleDisabled(!toDateDisable);\r\n              }}\r\n              value=\"\"\r\n            />{\" \"}\r\n            Current Job\r\n          </p>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <h4>To Date</h4>\r\n          <input type=\"date\" value={to} onChange={e => onChange(e)} name=\"to\" disabled={toDateDisable ? 'disabled': ''} />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <textarea\r\n            name=\"description\"\r\n            cols=\"30\"\r\n            rows=\"5\"\r\n            placeholder=\"Job Description\"\r\n            value={description}\r\n            onChange={e => onChange(e)}\r\n          ></textarea>\r\n        </div>\r\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n        <Link className=\"btn btn-light my-1\" to=\"/dashboard\">\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nAddExperience.propTypes = {\r\n    addExperiences: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, { addExperiences })(withRouter(AddExperience));\r\n"]},"metadata":{},"sourceType":"module"}