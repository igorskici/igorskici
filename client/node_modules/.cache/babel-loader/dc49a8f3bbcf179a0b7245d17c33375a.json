{"ast":null,"code":"import _regeneratorRuntime from\"D:\\\\Udemy\\\\ReactApp\\\\client\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _defineProperty from\"D:\\\\Udemy\\\\ReactApp\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"D:\\\\Udemy\\\\ReactApp\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"D:\\\\Udemy\\\\ReactApp\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{Fragment,useState}from'react';import{Link,Redirect}from'react-router-dom';import{connect}from'react-redux';import{setAlert}from'../../actions/alert';import{register}from'../../actions/auth';var Register=function Register(_ref){var setAlert=_ref.setAlert,register=_ref.register,isAuthenicated=_ref.isAuthenicated;var _useState=useState({name:'',email:'',password:'',password2:''}),_useState2=_slicedToArray(_useState,2),formDate=_useState2[0],setFormData=_useState2[1];var name=formDate.name,email=formDate.email,password=formDate.password,password2=formDate.password2;var _onChange=function onChange(e){setFormData(_objectSpread({},formDate,_defineProperty({},e.target.name,e.target.value)));};var _onSubmit=function onSubmit(e){return _regeneratorRuntime.async(function onSubmit$(_context){while(1){switch(_context.prev=_context.next){case 0:e.preventDefault();if(password!==password2){setAlert('Password do not match','danger');}else{console.log('OK SUBMIT');register({name:name,email:email,password:password});}case 2:case\"end\":return _context.stop();}}});};if(isAuthenicated){return React.createElement(Redirect,{to:\"/dashboard\"});}return React.createElement(Fragment,null,React.createElement(\"h1\",{className:\"large text-primary\"},\"Sign Up\"),React.createElement(\"p\",{className:\"lead\"},React.createElement(\"i\",{className:\"fas fa-user\"}),\" Create Your Account\"),React.createElement(\"form\",{className:\"form\",onSubmit:function onSubmit(e){return _onSubmit(e);}},React.createElement(\"div\",{className:\"form-group\"},React.createElement(\"input\",{type:\"text\",placeholder:\"Name\",name:\"name\",value:name,onChange:function onChange(e){return _onChange(e);},required:true})),React.createElement(\"div\",{className:\"form-group\"},React.createElement(\"input\",{type:\"email\",placeholder:\"Email Address\",name:\"email\",value:email,onChange:function onChange(e){return _onChange(e);},required:true}),React.createElement(\"small\",{className:\"form-text\"},\"This site uses Gravatar so if you want a profile image, use a Gravatar email\")),React.createElement(\"div\",{className:\"form-group\"},React.createElement(\"input\",{type:\"password\",placeholder:\"Password\",name:\"password\",minLength:\"6\",value:password,onChange:function onChange(e){return _onChange(e);}})),React.createElement(\"div\",{className:\"form-group\"},React.createElement(\"input\",{type:\"password\",placeholder:\"Confirm Password\",name:\"password2\",minLength:\"6\",value:password2,onChange:function onChange(e){return _onChange(e);}})),React.createElement(\"input\",{type:\"submit\",className:\"btn btn-primary\",value:\"Register\"})),React.createElement(\"p\",{className:\"my-1\"},\"Already have an account? \",React.createElement(Link,{to:\"/login\"},\"Sign in\")));};var mapStateToProps=function mapStateToProps(state){return{isAuthenicated:state.auth.isAuthenicated};};export default connect(mapStateToProps,{setAlert:setAlert,register:register})(Register);","map":{"version":3,"sources":["D:/Udemy/ReactApp/client/src/components/auth/Register.jsx"],"names":["React","Fragment","useState","Link","Redirect","connect","setAlert","register","Register","isAuthenicated","name","email","password","password2","formDate","setFormData","onChange","e","target","value","onSubmit","preventDefault","console","log","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React,{Fragment, useState} from 'react'\r\nimport {Link,Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {setAlert} from '../../actions/alert';\r\nimport {register} from '../../actions/auth';\r\nimport PropTypes from 'prop-types';\r\n\r\n \r\n\r\nconst Register = ({setAlert, register, isAuthenicated}) => {\r\n\r\n    const [formDate, setFormData] = useState({\r\n        name:'',\r\n        email:'',\r\n        password:'',\r\n        password2:''\r\n    });\r\n\r\n    const {name, email, password, password2} = formDate;\r\n\r\n    const onChange = e => {\r\n        setFormData({...formDate, [e.target.name]: e.target.value})\r\n    }\r\n\r\n    const onSubmit = async e => {\r\n        e.preventDefault();\r\n        if(password !== password2){\r\n            setAlert('Password do not match', 'danger')\r\n        }\r\n        else\r\n        {\r\n          console.log('OK SUBMIT');\r\n           register({name, email, password});\r\n        }\r\n    }\r\n\r\n\r\n    if(isAuthenicated){\r\n      return <Redirect to=\"/dashboard\"/>\r\n    }\r\n\r\n    return (\r\n       <Fragment>\r\n        <h1 className=\"large text-primary\">Sign Up</h1>\r\n        <p className=\"lead\"><i className=\"fas fa-user\"></i> Create Your Account</p>\r\n        <form className=\"form\" onSubmit={e => onSubmit(e)}>\r\n          <div className=\"form-group\">\r\n            <input type=\"text\" placeholder=\"Name\" name=\"name\" value={name} onChange={e => onChange(e)} required />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input type=\"email\" placeholder=\"Email Address\" name=\"email\" value={email} onChange={e => onChange(e)} required />\r\n            <small className=\"form-text\"\r\n              >This site uses Gravatar so if you want a profile image, use a\r\n              Gravatar email</small\r\n            >\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              name=\"password\"\r\n              minLength=\"6\"\r\n              value={password} \r\n              onChange={e => onChange(e)}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Confirm Password\"\r\n              name=\"password2\"\r\n              minLength=\"6\"\r\n              value={password2} \r\n              onChange={e => onChange(e)}\r\n            />\r\n          </div>\r\n          <input type=\"submit\" className=\"btn btn-primary\" value=\"Register\" />\r\n        </form>\r\n        <p className=\"my-1\">\r\n          Already have an account? <Link to=\"/login\">Sign in</Link>\r\n        </p>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nRegister.propTypes = {\r\n    setAlert: PropTypes.func.isRequired,\r\n    register: PropTypes.func.isRequired,\r\n    isAuthenicated: PropTypes.bool\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenicated: state.auth.isAuthenicated\r\n})\r\n\r\nexport default connect(mapStateToProps, { setAlert, register })(Register); \r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}