{"ast":null,"code":"var _jsxFileName = \"D:\\\\Udemy\\\\ReactApp\\\\client\\\\src\\\\components\\\\profile\\\\Profile.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../Layout/Spinner';\nimport { getProfilesById } from '../../actions/profile';\nimport { Link } from 'react-router-dom';\n\nconst Profile = ({\n  getProfilesById,\n  profile: {\n    profile,\n    loading,\n    auth\n  },\n  match\n}) => {\n  console.log(JSON.stringify(\"AUTH FROM STATE\" + auth));\n  useEffect(() => {\n    getProfilesById(match.params.id);\n  }, [getProfilesById]);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, profile === null || loading ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/profiles\",\n    className: \"btn btn-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Back To Profiles\"), auth.isAuthenicated && auth.loading === false && auth.user_id === profile.user._id && React.createElement(Link, {\n    to: \"/edit-profile\",\n    className: \"btn btn-dark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Edit Profile\")));\n};\n\nProfile.propTypes = {\n  getProfilesById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst MapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.auth\n});\n\nexport default connect(MapStateToProps, {\n  getProfilesById\n})(Profile);","map":{"version":3,"sources":["D:/Udemy/ReactApp/client/src/components/profile/Profile.js"],"names":["React","Fragment","useEffect","PropTypes","connect","Spinner","getProfilesById","Link","Profile","profile","loading","auth","match","console","log","JSON","stringify","params","id","isAuthenicated","user_id","user","_id","propTypes","func","isRequired","object","MapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAAQC,eAAR,QAA8B,uBAA9B;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEF,EAAAA,eAAF;AAAmBG,EAAAA,OAAO,EAAE;AAACA,IAAAA,OAAD;AAAUC,IAAAA,OAAV;AAAmBC,IAAAA;AAAnB,GAA5B;AAAsDC,EAAAA;AAAtD,CAAD,KAAmE;AAE/EC,EAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAe,oBAAoBL,IAAnC,CAAZ;AAGAT,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,eAAe,CAACM,KAAK,CAACK,MAAN,CAAaC,EAAd,CAAf;AACH,GAFQ,EAEP,CAACZ,eAAD,CAFO,CAAT;AAIA,SAAO,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACFG,OAAO,KAAK,IAAZ,IAAoBC,OAApB,GAA8B,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA9B,GAA4C,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACzC,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,WAAT;AAAqB,IAAA,SAAS,EAAC,eAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADyC,EAIxCC,IAAI,CAACQ,cAAL,IAAuBR,IAAI,CAACD,OAAL,KAAiB,KAAxC,IAAiDC,IAAI,CAACS,OAAL,KAAiBX,OAAO,CAACY,IAAR,CAAaC,GAA/E,IACG,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,eAAT;AAAyB,IAAA,SAAS,EAAC,cAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALqC,CAD1C,CAAP;AAYH,CArBD;;AAuBAd,OAAO,CAACe,SAAR,GAAoB;AAChBjB,EAAAA,eAAe,EAAEH,SAAS,CAACqB,IAAV,CAAeC,UADhB;AAEhBhB,EAAAA,OAAO,EAAEN,SAAS,CAACuB,MAAV,CAAiBD,UAFV;AAGhBd,EAAAA,IAAI,EAAER,SAAS,CAACuB,MAAV,CAAiBD;AAHP,CAApB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAC9BnB,EAAAA,OAAO,EAAEmB,KAAK,CAACnB,OADe;AAE9BE,EAAAA,IAAI,EAAEiB,KAAK,CAACjB;AAFkB,CAAL,CAA7B;;AAKA,eAAeP,OAAO,CAACuB,eAAD,EAAkB;AAACrB,EAAAA;AAAD,CAAlB,CAAP,CAA4CE,OAA5C,CAAf","sourcesContent":["import React, {Fragment, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport Spinner from '../Layout/Spinner';\r\nimport {getProfilesById} from '../../actions/profile';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Profile = ({ getProfilesById, profile: {profile, loading, auth}, match }) => {\r\n\r\n    console.log(JSON.stringify(\"AUTH FROM STATE\" + auth));\r\n\r\n\r\n    useEffect(() => {\r\n        getProfilesById(match.params.id);\r\n    },[getProfilesById]);\r\n\r\n    return <Fragment>\r\n        {profile === null || loading ? <Spinner /> : <Fragment>\r\n            <Link to=\"/profiles\" className=\"btn btn-light\">\r\n                Back To Profiles\r\n            </Link>\r\n            {auth.isAuthenicated && auth.loading === false && auth.user_id === profile.user._id && (\r\n                <Link to=\"/edit-profile\" className=\"btn btn-dark\">\r\n                    Edit Profile\r\n                </Link>\r\n            )}\r\n            </Fragment>}\r\n    </Fragment>\r\n}\r\n\r\nProfile.propTypes = {\r\n    getProfilesById: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n    auth: PropTypes.object.isRequired\r\n}\r\nconst MapStateToProps = state => ({\r\n    profile: state.profile,\r\n    auth: state.auth\r\n})\r\n\r\nexport default connect(MapStateToProps, {getProfilesById})(Profile)\r\n"]},"metadata":{},"sourceType":"module"}